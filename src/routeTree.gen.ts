/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DeferredRouteImport } from './routes/deferred'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CafesIndexRouteImport } from './routes/cafes/index'
import { Route as CafesIdRouteImport } from './routes/cafes/$id'
import { ServerRoute as ApiCafesServerRouteImport } from './routes/api/cafes'
import { ServerRoute as ApiCafesIdServerRouteImport } from './routes/api/cafes.$id'

const rootServerRouteImport = createServerRootRoute()

const DeferredRoute = DeferredRouteImport.update({
  id: '/deferred',
  path: '/deferred',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CafesIndexRoute = CafesIndexRouteImport.update({
  id: '/cafes/',
  path: '/cafes/',
  getParentRoute: () => rootRouteImport,
} as any)
const CafesIdRoute = CafesIdRouteImport.update({
  id: '/cafes/$id',
  path: '/cafes/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiCafesServerRoute = ApiCafesServerRouteImport.update({
  id: '/api/cafes',
  path: '/api/cafes',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiCafesIdServerRoute = ApiCafesIdServerRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ApiCafesServerRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/deferred': typeof DeferredRoute
  '/cafes/$id': typeof CafesIdRoute
  '/cafes': typeof CafesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/deferred': typeof DeferredRoute
  '/cafes/$id': typeof CafesIdRoute
  '/cafes': typeof CafesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/deferred': typeof DeferredRoute
  '/cafes/$id': typeof CafesIdRoute
  '/cafes/': typeof CafesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/deferred' | '/cafes/$id' | '/cafes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/deferred' | '/cafes/$id' | '/cafes'
  id: '__root__' | '/' | '/deferred' | '/cafes/$id' | '/cafes/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DeferredRoute: typeof DeferredRoute
  CafesIdRoute: typeof CafesIdRoute
  CafesIndexRoute: typeof CafesIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/cafes': typeof ApiCafesServerRouteWithChildren
  '/api/cafes/$id': typeof ApiCafesIdServerRoute
}
export interface FileServerRoutesByTo {
  '/api/cafes': typeof ApiCafesServerRouteWithChildren
  '/api/cafes/$id': typeof ApiCafesIdServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/cafes': typeof ApiCafesServerRouteWithChildren
  '/api/cafes/$id': typeof ApiCafesIdServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/cafes' | '/api/cafes/$id'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/cafes' | '/api/cafes/$id'
  id: '__root__' | '/api/cafes' | '/api/cafes/$id'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiCafesServerRoute: typeof ApiCafesServerRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/deferred': {
      id: '/deferred'
      path: '/deferred'
      fullPath: '/deferred'
      preLoaderRoute: typeof DeferredRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cafes/': {
      id: '/cafes/'
      path: '/cafes'
      fullPath: '/cafes'
      preLoaderRoute: typeof CafesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cafes/$id': {
      id: '/cafes/$id'
      path: '/cafes/$id'
      fullPath: '/cafes/$id'
      preLoaderRoute: typeof CafesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/cafes': {
      id: '/api/cafes'
      path: '/api/cafes'
      fullPath: '/api/cafes'
      preLoaderRoute: typeof ApiCafesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/cafes/$id': {
      id: '/api/cafes/$id'
      path: '/$id'
      fullPath: '/api/cafes/$id'
      preLoaderRoute: typeof ApiCafesIdServerRouteImport
      parentRoute: typeof ApiCafesServerRoute
    }
  }
}

interface ApiCafesServerRouteChildren {
  ApiCafesIdServerRoute: typeof ApiCafesIdServerRoute
}

const ApiCafesServerRouteChildren: ApiCafesServerRouteChildren = {
  ApiCafesIdServerRoute: ApiCafesIdServerRoute,
}

const ApiCafesServerRouteWithChildren = ApiCafesServerRoute._addFileChildren(
  ApiCafesServerRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DeferredRoute: DeferredRoute,
  CafesIdRoute: CafesIdRoute,
  CafesIndexRoute: CafesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiCafesServerRoute: ApiCafesServerRouteWithChildren,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
